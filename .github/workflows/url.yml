name: Validate URLs

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点运行（北京时间8点）
  workflow_dispatch:  # 允许手动触发

jobs:
  validate_urls:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Create and run URL validation script
      run: |
        # 创建Python脚本
        cat > validate_urls.py << 'EOL'
import requests
from datetime import datetime
import os

# 读取urls.txt
with open('urls.txt', 'r') as f:
    urls = [line.strip() for line in f.readlines() if line.strip()]

# 验证函数
def is_url_valid(url):
    try:
        response = requests.head(url, timeout=5, allow_redirects=True)
        return response.status_code == 200
    except:
        try:
            response = requests.get(url, timeout=5, stream=True)
            return response.status_code == 200
        except:
            return False

valid_urls = []
for url in urls:
    if is_url_valid(url):
        valid_urls.append(url)
        print(f'Valid: {url}')
    else:
        print(f'Invalid: {url}')

# 生成文件名
current_time = datetime.now().strftime('%Y%m%d_%H%M%S')
output_filename = f'urls_{current_time}.txt'

# 写入有效的URL
with open(output_filename, 'w') as f:
    for url in valid_urls:
        f.write(url + '\n')

print(f'Valid URLs saved to {output_filename}')
EOL

        # 运行脚本
        python validate_urls.py

    - name: Commit changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "github-actions[bot]"
        # 获取最新的生成文件
        latest_file=$(ls -t urls_*.txt | head -n1)
        if [ -n "$latest_file" ]; then
          git add "$latest_file"
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m ":rocket: AutoValidate URLs $(date +'%Y%m%d_%H%M%S')"
            git pull origin main --rebase
            git push origin main
          fi
        else
          echo "No URL file found to commit"
        fi